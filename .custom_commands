cc() {
  if [ $# -eq 0 ]; then
    echo "Usage: cc <command> [arguments]"
    return 1
  fi

  local cmd="cc_$1"
  shift

  if type "$cmd" &>/dev/null; then
    "$cmd" "$@"
  else
    echo "Command not found: cc $1"
    return 1
  fi
}

############################ Define your custom commands

#############################################################
#####################  NPM  #################################
#############################################################

ccnb() {
  npm run build "$@"
}

ccnd() {
  npm run dev "$@"
}

ccnds() {
  npm run dev-server "$@"
}

#############################################################
#####################  GIT  #################################
#############################################################

ccgc() {
  if [ $# -eq 0 ]; then
    echo "Usage: cc gc <message>"
    return 1
  fi
  git commit -m "$*"
}

ccgs() {
  git status
}

ccgp() {
  git push
}

ccgpl() {
  git pull
}

# Git checkout
ccgc() {
  if [ $# -eq 0 ]; then
    echo "Usage: ccgc [-b] <branch_name>"
    return 1
  fi

  if [ "$1" = "-b" ]; then
    if [ $# -lt 2 ]; then
      echo "Usage: ccgc -b <new_branch_name>"
      return 1
    fi
    git checkout -b "${@:2}"
  else
    git checkout "$@"
  fi
}

cc_example() {
  echo "This is an example command"
}

# Add more custom commands as needed
